name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Add EC2 host to known hosts
        run: ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Actualizar sistema e instalar dependencias
            sudo apt update && sudo apt upgrade -y
            sudo apt install -y git curl nginx

            # Instalar Node.js 20 y PM2
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt install -y nodejs
            sudo npm install pm2@latest -g

            # Clonar el repositorio desde GitHub
            cd /home/ubuntu
            git clone https://github.com/amurpo/desafio2-devops.git
            cd desafio2-devops

            # Instalar las dependencias de Node.js
            npm install

            # Configurar Nginx como proxy inverso usando solo la IP del EC2
            sudo bash -c 'cat > /etc/nginx/sites-available/default <<EOL
            server {
                listen 80;

                server_name ${ { secrets.EC2_IP } }; # Usamos la IP del EC2 como dominio

                location / {
                    proxy_pass http://localhost:8080;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOL'

            # Reiniciar Nginx para aplicar los cambios
            sudo systemctl restart nginx

            # Iniciar la aplicaciÃ³n con PM2
            pm2 start app.js --name nodejs-image-demo
            pm2 save
          EOF

      - name: Verify Deployment
        run: |
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.EC2_IP }})
          echo "HTTP Status Code: $HTTP_CODE"
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "Deployment is successful"
          else
            echo "Deployment failed with status code $HTTP_CODE"
            exit 1
          fi
